ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/freertos.c"
  20              		.section	.rodata.USBTask_Run.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC2:
  23 0000 5B494D55 		.ascii	"[IMU] Pitch: %.2f, Roll: %.2f\015\012[BARO] Altitud"
  23      5D205069 
  23      7463683A 
  23      20252E32 
  23      662C2052 
  24 002d 653A2025 		.ascii	"e: %.2fm, Pressure: %.2fPa\015\012\000"
  24      2E32666D 
  24      2C205072 
  24      65737375 
  24      72653A20 
  25              		.global	__aeabi_f2d
  26              		.section	.text.USBTask_Run,"ax",%progbits
  27              		.align	1
  28              		.global	USBTask_Run
  29              		.syntax unified
  30              		.thumb
  31              		.thumb_func
  33              	USBTask_Run:
  34              	.LVL0:
  35              	.LFB753:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s 			page 2


  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include "SensorTask.h"
  29:Core/Src/freertos.c **** #include "strings.h"
  30:Core/Src/freertos.c **** #include <stdio.h>
  31:Core/Src/freertos.c **** #include <stdlib.h>
  32:Core/Src/freertos.c **** #include "usbd_cdc_if.h"
  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END Includes */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PTD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PD */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END PM */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  53:Core/Src/freertos.c **** 
  54:Core/Src/freertos.c **** /* USER CODE END Variables */
  55:Core/Src/freertos.c **** osThreadId USBTaskHandle;
  56:Core/Src/freertos.c **** 
  57:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  59:Core/Src/freertos.c **** 
  60:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  61:Core/Src/freertos.c **** 
  62:Core/Src/freertos.c **** void USBTask_Run(void const * argument);
  63:Core/Src/freertos.c **** 
  64:Core/Src/freertos.c **** extern void MX_USB_DEVICE_Init(void);
  65:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  66:Core/Src/freertos.c **** 
  67:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  68:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** /* GetTimerTaskMemory prototype (linked to static allocation support) */
  71:Core/Src/freertos.c **** void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTa
  72:Core/Src/freertos.c **** 
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s 			page 3


  73:Core/Src/freertos.c **** /* Hook prototypes */
  74:Core/Src/freertos.c **** void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName);
  75:Core/Src/freertos.c **** 
  76:Core/Src/freertos.c **** /* USER CODE BEGIN 4 */
  77:Core/Src/freertos.c **** __weak void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName)
  78:Core/Src/freertos.c **** {
  79:Core/Src/freertos.c ****    /* Run time stack overflow checking is performed if
  80:Core/Src/freertos.c ****    configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is
  81:Core/Src/freertos.c ****    called if a stack overflow is detected. */
  82:Core/Src/freertos.c **** }
  83:Core/Src/freertos.c **** /* USER CODE END 4 */
  84:Core/Src/freertos.c **** 
  85:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  86:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  87:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  90:Core/Src/freertos.c **** {
  91:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  92:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  93:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  94:Core/Src/freertos.c ****   /* place for user code */
  95:Core/Src/freertos.c **** }
  96:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  97:Core/Src/freertos.c **** 
  98:Core/Src/freertos.c **** /* USER CODE BEGIN GET_TIMER_TASK_MEMORY */
  99:Core/Src/freertos.c **** static StaticTask_t xTimerTaskTCBBuffer;
 100:Core/Src/freertos.c **** static StackType_t xTimerStack[configTIMER_TASK_STACK_DEPTH];
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c **** void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTa
 103:Core/Src/freertos.c **** {
 104:Core/Src/freertos.c ****   *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 105:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 106:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 107:Core/Src/freertos.c ****   /* place for user code */
 108:Core/Src/freertos.c **** }
 109:Core/Src/freertos.c **** /* USER CODE END GET_TIMER_TASK_MEMORY */
 110:Core/Src/freertos.c **** 
 111:Core/Src/freertos.c **** /**
 112:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 113:Core/Src/freertos.c ****   * @param  None
 114:Core/Src/freertos.c ****   * @retval None
 115:Core/Src/freertos.c ****   */
 116:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 117:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 118:Core/Src/freertos.c **** 
 119:Core/Src/freertos.c ****   /* USER CODE END Init */
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 122:Core/Src/freertos.c ****   /* add mutexes, ... */
 123:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 124:Core/Src/freertos.c **** 
 125:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 126:Core/Src/freertos.c ****   /* add semaphores, ... */
 127:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 128:Core/Src/freertos.c **** 
 129:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s 			page 4


 130:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 131:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 132:Core/Src/freertos.c **** 
 133:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 134:Core/Src/freertos.c ****   /* add queues, ... */
 135:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 136:Core/Src/freertos.c **** 
 137:Core/Src/freertos.c ****   /* Create the thread(s) */
 138:Core/Src/freertos.c ****   /* definition and creation of USBTask */
 139:Core/Src/freertos.c ****   osThreadDef(USBTask, USBTask_Run, osPriorityHigh, 0, 512);
 140:Core/Src/freertos.c ****   USBTaskHandle = osThreadCreate(osThread(USBTask), NULL);
 141:Core/Src/freertos.c **** 
 142:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 143:Core/Src/freertos.c ****   SensorTask_Init();
 144:Core/Src/freertos.c **** 
 145:Core/Src/freertos.c ****   /* add threads, ... */
 146:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 147:Core/Src/freertos.c **** 
 148:Core/Src/freertos.c **** }
 149:Core/Src/freertos.c **** 
 150:Core/Src/freertos.c **** /* USER CODE BEGIN Header_USBTask_Run */
 151:Core/Src/freertos.c **** /**
 152:Core/Src/freertos.c ****   * @brief  Function implementing the USBTask thread.
 153:Core/Src/freertos.c ****   * @param  argument: Not used
 154:Core/Src/freertos.c ****   * @retval None
 155:Core/Src/freertos.c ****   */
 156:Core/Src/freertos.c **** /* USER CODE END Header_USBTask_Run */
 157:Core/Src/freertos.c **** void USBTask_Run(void const * argument)
 158:Core/Src/freertos.c **** {
  36              		.loc 1 158 1 view -0
  37              		.cfi_startproc
  38              		@ Volatile: function does not return.
  39              		@ args = 0, pretend = 0, frame = 168
  40              		@ frame_needed = 0, uses_anonymous_args = 0
  41              		.loc 1 158 1 is_stmt 0 view .LVU1
  42 0000 00B5     		push	{lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 4
  45              		.cfi_offset 14, -4
  46 0002 B3B0     		sub	sp, sp, #204
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 208
 159:Core/Src/freertos.c ****   /* init code for USB_DEVICE */
 160:Core/Src/freertos.c ****   MX_USB_DEVICE_Init();
  49              		.loc 1 160 3 is_stmt 1 view .LVU2
  50 0004 FFF7FEFF 		bl	MX_USB_DEVICE_Init
  51              	.LVL1:
  52              	.L2:
 161:Core/Src/freertos.c ****   /* USER CODE BEGIN USBTask_Run */
 162:Core/Src/freertos.c ****   IMU_Data_t imu;
  53              		.loc 1 162 3 view .LVU3
 163:Core/Src/freertos.c ****   Barometer_Data_t baro;
  54              		.loc 1 163 3 view .LVU4
 164:Core/Src/freertos.c ****   Attitude_Data_t attitude;
  55              		.loc 1 164 3 view .LVU5
 165:Core/Src/freertos.c **** 
 166:Core/Src/freertos.c ****   /* Infinite loop */
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s 			page 5


 167:Core/Src/freertos.c ****   for(;;)
  56              		.loc 1 167 3 view .LVU6
  57              	.LBB2:
 168:Core/Src/freertos.c ****   {
 169:Core/Src/freertos.c ****     // SensorTask_GetIMU(&imu);
 170:Core/Src/freertos.c ****     SensorTask_GetBaro(&baro);
  58              		.loc 1 170 5 view .LVU7
  59 0008 2DA8     		add	r0, sp, #180
  60 000a FFF7FEFF 		bl	SensorTask_GetBaro
  61              	.LVL2:
 171:Core/Src/freertos.c ****     SensorTask_GetAttitude(&attitude);
  62              		.loc 1 171 5 view .LVU8
  63 000e 29A8     		add	r0, sp, #164
  64 0010 FFF7FEFF 		bl	SensorTask_GetAttitude
  65              	.LVL3:
 172:Core/Src/freertos.c ****     
 173:Core/Src/freertos.c ****     char buffer[128];
  66              		.loc 1 173 5 view .LVU9
 174:Core/Src/freertos.c ****     // snprintf(buffer, 128, "[IMU] Gyro(deg/s) >> X:%.2f, Y:%.2f, Z:%.2f | Acc(m/s2) >> X:%.2f, Y:
 175:Core/Src/freertos.c **** 
 176:Core/Src/freertos.c ****     snprintf(buffer, 128, "[IMU] Pitch: %.2f, Roll: %.2f\r\n[BARO] Altitude: %.2fm, Pressure: %.2fP
  67              		.loc 1 176 5 view .LVU10
  68              		.loc 1 176 108 is_stmt 0 view .LVU11
  69 0014 DFED177A 		vldr.32	s15, .L4
  70 0018 9DED298A 		vldr.32	s16, [sp, #164]
  71 001c 28EE278A 		vmul.f32	s16, s16, s15
  72              		.loc 1 176 133 view .LVU12
  73 0020 DDED2A8A 		vldr.32	s17, [sp, #168]
  74 0024 68EEA78A 		vmul.f32	s17, s17, s15
  75              		.loc 1 176 5 view .LVU13
  76 0028 2D98     		ldr	r0, [sp, #180]	@ float
  77 002a FFF7FEFF 		bl	__aeabi_f2d
  78              	.LVL4:
  79 002e CDE90601 		strd	r0, [sp, #24]
  80 0032 2E98     		ldr	r0, [sp, #184]	@ float
  81 0034 FFF7FEFF 		bl	__aeabi_f2d
  82              	.LVL5:
  83 0038 CDE90401 		strd	r0, [sp, #16]
  84 003c 18EE900A 		vmov	r0, s17
  85 0040 FFF7FEFF 		bl	__aeabi_f2d
  86              	.LVL6:
  87 0044 CDE90201 		strd	r0, [sp, #8]
  88 0048 18EE100A 		vmov	r0, s16
  89 004c FFF7FEFF 		bl	__aeabi_f2d
  90              	.LVL7:
  91 0050 CDE90001 		strd	r0, [sp]
  92 0054 084A     		ldr	r2, .L4+4
  93 0056 8021     		movs	r1, #128
  94 0058 09A8     		add	r0, sp, #36
  95 005a FFF7FEFF 		bl	snprintf
  96              	.LVL8:
 177:Core/Src/freertos.c ****     CDC_Transmit_FS(buffer, strlen(buffer));
  97              		.loc 1 177 5 is_stmt 1 view .LVU14
  98              		.loc 1 177 29 is_stmt 0 view .LVU15
  99 005e 09A8     		add	r0, sp, #36
 100 0060 FFF7FEFF 		bl	strlen
 101              	.LVL9:
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s 			page 6


 102              		.loc 1 177 5 discriminator 1 view .LVU16
 103 0064 81B2     		uxth	r1, r0
 104 0066 09A8     		add	r0, sp, #36
 105 0068 FFF7FEFF 		bl	CDC_Transmit_FS
 106              	.LVL10:
 178:Core/Src/freertos.c **** 
 179:Core/Src/freertos.c ****     osDelay(50); // 20Hz
 107              		.loc 1 179 5 is_stmt 1 view .LVU17
 108 006c 3220     		movs	r0, #50
 109 006e FFF7FEFF 		bl	osDelay
 110              	.LVL11:
 111              	.LBE2:
 167:Core/Src/freertos.c ****   {
 112              		.loc 1 167 3 view .LVU18
 113 0072 C9E7     		b	.L2
 114              	.L5:
 115              		.align	2
 116              	.L4:
 117 0074 E12E6542 		.word	1113927393
 118 0078 00000000 		.word	.LC2
 119              		.cfi_endproc
 120              	.LFE753:
 122              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 123              		.align	1
 124              		.weak	vApplicationStackOverflowHook
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 129              	vApplicationStackOverflowHook:
 130              	.LVL12:
 131              	.LFB749:
  78:Core/Src/freertos.c ****    /* Run time stack overflow checking is performed if
 132              		.loc 1 78 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
  82:Core/Src/freertos.c **** /* USER CODE END 4 */
 137              		.loc 1 82 1 view .LVU20
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE749:
 142              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 143              		.align	1
 144              		.global	vApplicationGetIdleTaskMemory
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 149              	vApplicationGetIdleTaskMemory:
 150              	.LVL13:
 151              	.LFB750:
  90:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 152              		.loc 1 90 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s 			page 7


  91:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 157              		.loc 1 91 3 view .LVU22
  91:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 158              		.loc 1 91 25 is_stmt 0 view .LVU23
 159 0000 034B     		ldr	r3, .L8
 160 0002 0360     		str	r3, [r0]
  92:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 161              		.loc 1 92 3 is_stmt 1 view .LVU24
  92:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 162              		.loc 1 92 27 is_stmt 0 view .LVU25
 163 0004 034B     		ldr	r3, .L8+4
 164 0006 0B60     		str	r3, [r1]
  93:Core/Src/freertos.c ****   /* place for user code */
 165              		.loc 1 93 3 is_stmt 1 view .LVU26
  93:Core/Src/freertos.c ****   /* place for user code */
 166              		.loc 1 93 25 is_stmt 0 view .LVU27
 167 0008 8023     		movs	r3, #128
 168 000a 1360     		str	r3, [r2]
  95:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 169              		.loc 1 95 1 view .LVU28
 170 000c 7047     		bx	lr
 171              	.L9:
 172 000e 00BF     		.align	2
 173              	.L8:
 174 0010 00000000 		.word	xIdleTaskTCBBuffer
 175 0014 00000000 		.word	xIdleStack
 176              		.cfi_endproc
 177              	.LFE750:
 179              		.section	.text.vApplicationGetTimerTaskMemory,"ax",%progbits
 180              		.align	1
 181              		.global	vApplicationGetTimerTaskMemory
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 186              	vApplicationGetTimerTaskMemory:
 187              	.LVL14:
 188              	.LFB751:
 103:Core/Src/freertos.c ****   *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 189              		.loc 1 103 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 104:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 194              		.loc 1 104 3 view .LVU30
 104:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 195              		.loc 1 104 26 is_stmt 0 view .LVU31
 196 0000 034B     		ldr	r3, .L11
 197 0002 0360     		str	r3, [r0]
 105:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 198              		.loc 1 105 3 is_stmt 1 view .LVU32
 105:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 199              		.loc 1 105 28 is_stmt 0 view .LVU33
 200 0004 034B     		ldr	r3, .L11+4
 201 0006 0B60     		str	r3, [r1]
 106:Core/Src/freertos.c ****   /* place for user code */
 202              		.loc 1 106 3 is_stmt 1 view .LVU34
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s 			page 8


 106:Core/Src/freertos.c ****   /* place for user code */
 203              		.loc 1 106 26 is_stmt 0 view .LVU35
 204 0008 4FF48073 		mov	r3, #256
 205 000c 1360     		str	r3, [r2]
 108:Core/Src/freertos.c **** /* USER CODE END GET_TIMER_TASK_MEMORY */
 206              		.loc 1 108 1 view .LVU36
 207 000e 7047     		bx	lr
 208              	.L12:
 209              		.align	2
 210              	.L11:
 211 0010 00000000 		.word	xTimerTaskTCBBuffer
 212 0014 00000000 		.word	xTimerStack
 213              		.cfi_endproc
 214              	.LFE751:
 216              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 217              		.align	1
 218              		.global	MX_FREERTOS_Init
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	MX_FREERTOS_Init:
 224              	.LFB752:
 116:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 225              		.loc 1 116 29 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 32
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 10B5     		push	{r4, lr}
 230              	.LCFI2:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 4, -8
 233              		.cfi_offset 14, -4
 234 0002 88B0     		sub	sp, sp, #32
 235              	.LCFI3:
 236              		.cfi_def_cfa_offset 40
 139:Core/Src/freertos.c ****   USBTaskHandle = osThreadCreate(osThread(USBTask), NULL);
 237              		.loc 1 139 3 view .LVU38
 238 0004 0DF1040C 		add	ip, sp, #4
 239 0008 084C     		ldr	r4, .L15
 240 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 241 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 242 0010 94E80700 		ldm	r4, {r0, r1, r2}
 243 0014 8CE80700 		stm	ip, {r0, r1, r2}
 140:Core/Src/freertos.c **** 
 244              		.loc 1 140 3 view .LVU39
 140:Core/Src/freertos.c **** 
 245              		.loc 1 140 19 is_stmt 0 view .LVU40
 246 0018 0021     		movs	r1, #0
 247 001a 01A8     		add	r0, sp, #4
 248 001c FFF7FEFF 		bl	osThreadCreate
 249              	.LVL15:
 140:Core/Src/freertos.c **** 
 250              		.loc 1 140 17 discriminator 1 view .LVU41
 251 0020 034B     		ldr	r3, .L15+4
 252 0022 1860     		str	r0, [r3]
 143:Core/Src/freertos.c **** 
 253              		.loc 1 143 3 is_stmt 1 view .LVU42
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s 			page 9


 254 0024 FFF7FEFF 		bl	SensorTask_Init
 255              	.LVL16:
 148:Core/Src/freertos.c **** 
 256              		.loc 1 148 1 is_stmt 0 view .LVU43
 257 0028 08B0     		add	sp, sp, #32
 258              	.LCFI4:
 259              		.cfi_def_cfa_offset 8
 260              		@ sp needed
 261 002a 10BD     		pop	{r4, pc}
 262              	.L16:
 263              		.align	2
 264              	.L15:
 265 002c 00000000 		.word	.LANCHOR0
 266 0030 00000000 		.word	USBTaskHandle
 267              		.cfi_endproc
 268              	.LFE752:
 270              		.section	.rodata.str1.4,"aMS",%progbits,1
 271              		.align	2
 272              	.LC0:
 273 0000 55534254 		.ascii	"USBTask\000"
 273      61736B00 
 274              		.section	.bss.xTimerStack,"aw",%nobits
 275              		.align	2
 278              	xTimerStack:
 279 0000 00000000 		.space	1024
 279      00000000 
 279      00000000 
 279      00000000 
 279      00000000 
 280              		.section	.bss.xTimerTaskTCBBuffer,"aw",%nobits
 281              		.align	3
 284              	xTimerTaskTCBBuffer:
 285 0000 00000000 		.space	384
 285      00000000 
 285      00000000 
 285      00000000 
 285      00000000 
 286              		.section	.bss.xIdleStack,"aw",%nobits
 287              		.align	2
 290              	xIdleStack:
 291 0000 00000000 		.space	512
 291      00000000 
 291      00000000 
 291      00000000 
 291      00000000 
 292              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 293              		.align	3
 296              	xIdleTaskTCBBuffer:
 297 0000 00000000 		.space	384
 297      00000000 
 297      00000000 
 297      00000000 
 297      00000000 
 298              		.global	USBTaskHandle
 299              		.section	.bss.USBTaskHandle,"aw",%nobits
 300              		.align	2
 303              	USBTaskHandle:
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s 			page 10


 304 0000 00000000 		.space	4
 305              		.section	.rodata
 306              		.align	2
 307              		.set	.LANCHOR0,. + 0
 308              	.LC3:
 309 0000 00000000 		.word	.LC0
 310 0004 00000000 		.word	USBTask_Run
 311 0008 0200     		.short	2
 312 000a 0000     		.space	2
 313 000c 00000000 		.word	0
 314 0010 00020000 		.word	512
 315 0014 00000000 		.word	0
 316 0018 00000000 		.word	0
 317              		.text
 318              	.Letext0:
 319              		.file 2 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.2.1/includ
 320              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 321              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 322              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 323              		.file 6 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 324              		.file 7 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 325              		.file 8 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 326              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 327              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 328              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h"
 329              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 330              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 331              		.file 14 "App/Config/sensor_types.h"
 332              		.file 15 "App/Config/filter_types.h"
 333              		.file 16 "USB_DEVICE/App/usbd_cdc_if.h"
 334              		.file 17 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 335              		.file 18 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 336              		.file 19 "App/Tasks/SensorTask.h"
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:21     .rodata.USBTask_Run.str1.4:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:27     .text.USBTask_Run:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:33     .text.USBTask_Run:00000000 USBTask_Run
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:117    .text.USBTask_Run:00000074 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:123    .text.vApplicationStackOverflowHook:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:129    .text.vApplicationStackOverflowHook:00000000 vApplicationStackOverflowHook
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:143    .text.vApplicationGetIdleTaskMemory:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:149    .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:174    .text.vApplicationGetIdleTaskMemory:00000010 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:296    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:290    .bss.xIdleStack:00000000 xIdleStack
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:180    .text.vApplicationGetTimerTaskMemory:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:186    .text.vApplicationGetTimerTaskMemory:00000000 vApplicationGetTimerTaskMemory
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:211    .text.vApplicationGetTimerTaskMemory:00000010 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:284    .bss.xTimerTaskTCBBuffer:00000000 xTimerTaskTCBBuffer
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:278    .bss.xTimerStack:00000000 xTimerStack
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:217    .text.MX_FREERTOS_Init:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:223    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:265    .text.MX_FREERTOS_Init:0000002c $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:303    .bss.USBTaskHandle:00000000 USBTaskHandle
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:271    .rodata.str1.4:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:275    .bss.xTimerStack:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:281    .bss.xTimerTaskTCBBuffer:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:287    .bss.xIdleStack:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:293    .bss.xIdleTaskTCBBuffer:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:300    .bss.USBTaskHandle:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccECpmTy.s:306    .rodata:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
MX_USB_DEVICE_Init
SensorTask_GetBaro
SensorTask_GetAttitude
snprintf
strlen
CDC_Transmit_FS
osDelay
osThreadCreate
SensorTask_Init
