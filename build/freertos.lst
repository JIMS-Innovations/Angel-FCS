ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/freertos.c"
  20              		.section	.rodata.USBTask_Run.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC2:
  23 0000 5B494D55 		.ascii	"[IMU] Gyro(deg/s) >> X:%.2f, Y:%.2f, Z:%.2f | Acc(m"
  23      5D204779 
  23      726F2864 
  23      65672F73 
  23      29203E3E 
  24 0033 2F733229 		.ascii	"/s2) >> X:%.2f, Y:%.2f, Z:%.2f\015\012\000"
  24      203E3E20 
  24      583A252E 
  24      32662C20 
  24      593A252E 
  25              		.global	__aeabi_f2d
  26              		.section	.text.USBTask_Run,"ax",%progbits
  27              		.align	1
  28              		.global	USBTask_Run
  29              		.syntax unified
  30              		.thumb
  31              		.thumb_func
  33              	USBTask_Run:
  34              	.LVL0:
  35              	.LFB753:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s 			page 2


  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include "SensorTask.h"
  29:Core/Src/freertos.c **** #include "strings.h"
  30:Core/Src/freertos.c **** #include <stdio.h>
  31:Core/Src/freertos.c **** #include <stdlib.h>
  32:Core/Src/freertos.c **** #include "usbd_cdc_if.h"
  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END Includes */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PTD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PD */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END PM */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  53:Core/Src/freertos.c **** 
  54:Core/Src/freertos.c **** /* USER CODE END Variables */
  55:Core/Src/freertos.c **** osThreadId USBTaskHandle;
  56:Core/Src/freertos.c **** 
  57:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  59:Core/Src/freertos.c **** 
  60:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  61:Core/Src/freertos.c **** 
  62:Core/Src/freertos.c **** void USBTask_Run(void const * argument);
  63:Core/Src/freertos.c **** 
  64:Core/Src/freertos.c **** extern void MX_USB_DEVICE_Init(void);
  65:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  66:Core/Src/freertos.c **** 
  67:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  68:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** /* GetTimerTaskMemory prototype (linked to static allocation support) */
  71:Core/Src/freertos.c **** void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTa
  72:Core/Src/freertos.c **** 
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s 			page 3


  73:Core/Src/freertos.c **** /* Hook prototypes */
  74:Core/Src/freertos.c **** void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName);
  75:Core/Src/freertos.c **** 
  76:Core/Src/freertos.c **** /* USER CODE BEGIN 4 */
  77:Core/Src/freertos.c **** __weak void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName)
  78:Core/Src/freertos.c **** {
  79:Core/Src/freertos.c ****    /* Run time stack overflow checking is performed if
  80:Core/Src/freertos.c ****    configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is
  81:Core/Src/freertos.c ****    called if a stack overflow is detected. */
  82:Core/Src/freertos.c **** }
  83:Core/Src/freertos.c **** /* USER CODE END 4 */
  84:Core/Src/freertos.c **** 
  85:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  86:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  87:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  90:Core/Src/freertos.c **** {
  91:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  92:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  93:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  94:Core/Src/freertos.c ****   /* place for user code */
  95:Core/Src/freertos.c **** }
  96:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  97:Core/Src/freertos.c **** 
  98:Core/Src/freertos.c **** /* USER CODE BEGIN GET_TIMER_TASK_MEMORY */
  99:Core/Src/freertos.c **** static StaticTask_t xTimerTaskTCBBuffer;
 100:Core/Src/freertos.c **** static StackType_t xTimerStack[configTIMER_TASK_STACK_DEPTH];
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c **** void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTa
 103:Core/Src/freertos.c **** {
 104:Core/Src/freertos.c ****   *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 105:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 106:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 107:Core/Src/freertos.c ****   /* place for user code */
 108:Core/Src/freertos.c **** }
 109:Core/Src/freertos.c **** /* USER CODE END GET_TIMER_TASK_MEMORY */
 110:Core/Src/freertos.c **** 
 111:Core/Src/freertos.c **** /**
 112:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 113:Core/Src/freertos.c ****   * @param  None
 114:Core/Src/freertos.c ****   * @retval None
 115:Core/Src/freertos.c ****   */
 116:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 117:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 118:Core/Src/freertos.c **** 
 119:Core/Src/freertos.c ****   /* USER CODE END Init */
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 122:Core/Src/freertos.c ****   /* add mutexes, ... */
 123:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 124:Core/Src/freertos.c **** 
 125:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 126:Core/Src/freertos.c ****   /* add semaphores, ... */
 127:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 128:Core/Src/freertos.c **** 
 129:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s 			page 4


 130:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 131:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 132:Core/Src/freertos.c **** 
 133:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 134:Core/Src/freertos.c ****   /* add queues, ... */
 135:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 136:Core/Src/freertos.c **** 
 137:Core/Src/freertos.c ****   /* Create the thread(s) */
 138:Core/Src/freertos.c ****   /* definition and creation of USBTask */
 139:Core/Src/freertos.c ****   osThreadDef(USBTask, USBTask_Run, osPriorityHigh, 0, 512);
 140:Core/Src/freertos.c ****   USBTaskHandle = osThreadCreate(osThread(USBTask), NULL);
 141:Core/Src/freertos.c **** 
 142:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 143:Core/Src/freertos.c ****   SensorTask_Init();
 144:Core/Src/freertos.c **** 
 145:Core/Src/freertos.c ****   /* add threads, ... */
 146:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 147:Core/Src/freertos.c **** 
 148:Core/Src/freertos.c **** }
 149:Core/Src/freertos.c **** 
 150:Core/Src/freertos.c **** /* USER CODE BEGIN Header_USBTask_Run */
 151:Core/Src/freertos.c **** /**
 152:Core/Src/freertos.c ****   * @brief  Function implementing the USBTask thread.
 153:Core/Src/freertos.c ****   * @param  argument: Not used
 154:Core/Src/freertos.c ****   * @retval None
 155:Core/Src/freertos.c ****   */
 156:Core/Src/freertos.c **** /* USER CODE END Header_USBTask_Run */
 157:Core/Src/freertos.c **** void USBTask_Run(void const * argument)
 158:Core/Src/freertos.c **** {
  36              		.loc 1 158 1 view -0
  37              		.cfi_startproc
  38              		@ Volatile: function does not return.
  39              		@ args = 0, pretend = 0, frame = 176
  40              		@ frame_needed = 0, uses_anonymous_args = 0
  41              		.loc 1 158 1 is_stmt 0 view .LVU1
  42 0000 00B5     		push	{lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 4
  45              		.cfi_offset 14, -4
  46 0002 B9B0     		sub	sp, sp, #228
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 232
 159:Core/Src/freertos.c ****   /* init code for USB_DEVICE */
 160:Core/Src/freertos.c ****   MX_USB_DEVICE_Init();
  49              		.loc 1 160 3 is_stmt 1 view .LVU2
  50 0004 FFF7FEFF 		bl	MX_USB_DEVICE_Init
  51              	.LVL1:
  52              	.L2:
 161:Core/Src/freertos.c ****   /* USER CODE BEGIN USBTask_Run */
 162:Core/Src/freertos.c ****   IMU_Data_t imu;
  53              		.loc 1 162 3 view .LVU3
 163:Core/Src/freertos.c **** 
 164:Core/Src/freertos.c ****   /* Infinite loop */
 165:Core/Src/freertos.c ****   for(;;)
  54              		.loc 1 165 3 view .LVU4
  55              	.LBB2:
 166:Core/Src/freertos.c ****   {
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s 			page 5


 167:Core/Src/freertos.c ****     SensorTask_GetIMU(&imu);
  56              		.loc 1 167 5 view .LVU5
  57 0008 2DA8     		add	r0, sp, #180
  58 000a FFF7FEFF 		bl	SensorTask_GetIMU
  59              	.LVL2:
 168:Core/Src/freertos.c ****     
 169:Core/Src/freertos.c ****     char buffer[128];
  60              		.loc 1 169 5 view .LVU6
 170:Core/Src/freertos.c ****     snprintf(buffer, 128, "[IMU] Gyro(deg/s) >> X:%.2f, Y:%.2f, Z:%.2f | Acc(m/s2) >> X:%.2f, Y:%.2
  61              		.loc 1 170 5 view .LVU7
  62 000e 2F98     		ldr	r0, [sp, #188]	@ float
  63 0010 FFF7FEFF 		bl	__aeabi_f2d
  64              	.LVL3:
  65 0014 CDE90A01 		strd	r0, [sp, #40]
  66 0018 2E98     		ldr	r0, [sp, #184]	@ float
  67 001a FFF7FEFF 		bl	__aeabi_f2d
  68              	.LVL4:
  69 001e CDE90801 		strd	r0, [sp, #32]
  70 0022 2D98     		ldr	r0, [sp, #180]	@ float
  71 0024 FFF7FEFF 		bl	__aeabi_f2d
  72              	.LVL5:
  73 0028 CDE90601 		strd	r0, [sp, #24]
  74 002c 3298     		ldr	r0, [sp, #200]	@ float
  75 002e FFF7FEFF 		bl	__aeabi_f2d
  76              	.LVL6:
  77 0032 CDE90401 		strd	r0, [sp, #16]
  78 0036 3198     		ldr	r0, [sp, #196]	@ float
  79 0038 FFF7FEFF 		bl	__aeabi_f2d
  80              	.LVL7:
  81 003c CDE90201 		strd	r0, [sp, #8]
  82 0040 3098     		ldr	r0, [sp, #192]	@ float
  83 0042 FFF7FEFF 		bl	__aeabi_f2d
  84              	.LVL8:
  85 0046 CDE90001 		strd	r0, [sp]
  86 004a 084A     		ldr	r2, .L4
  87 004c 8021     		movs	r1, #128
  88 004e 0DA8     		add	r0, sp, #52
  89 0050 FFF7FEFF 		bl	snprintf
  90              	.LVL9:
 171:Core/Src/freertos.c ****       imu.gyro[2], imu.accel[0], imu.accel[1], imu.accel[2]);
 172:Core/Src/freertos.c ****     CDC_Transmit_FS(buffer, strlen(buffer));
  91              		.loc 1 172 5 view .LVU8
  92              		.loc 1 172 29 is_stmt 0 view .LVU9
  93 0054 0DA8     		add	r0, sp, #52
  94 0056 FFF7FEFF 		bl	strlen
  95              	.LVL10:
  96              		.loc 1 172 5 discriminator 1 view .LVU10
  97 005a 81B2     		uxth	r1, r0
  98 005c 0DA8     		add	r0, sp, #52
  99 005e FFF7FEFF 		bl	CDC_Transmit_FS
 100              	.LVL11:
 173:Core/Src/freertos.c **** 
 174:Core/Src/freertos.c ****     osDelay(50);
 101              		.loc 1 174 5 is_stmt 1 view .LVU11
 102 0062 3220     		movs	r0, #50
 103 0064 FFF7FEFF 		bl	osDelay
 104              	.LVL12:
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s 			page 6


 105              	.LBE2:
 165:Core/Src/freertos.c ****   {
 106              		.loc 1 165 3 view .LVU12
 107 0068 CEE7     		b	.L2
 108              	.L5:
 109 006a 00BF     		.align	2
 110              	.L4:
 111 006c 00000000 		.word	.LC2
 112              		.cfi_endproc
 113              	.LFE753:
 115              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 116              		.align	1
 117              		.weak	vApplicationStackOverflowHook
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	vApplicationStackOverflowHook:
 123              	.LVL13:
 124              	.LFB749:
  78:Core/Src/freertos.c ****    /* Run time stack overflow checking is performed if
 125              		.loc 1 78 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
  82:Core/Src/freertos.c **** /* USER CODE END 4 */
 130              		.loc 1 82 1 view .LVU14
 131 0000 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE749:
 135              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 136              		.align	1
 137              		.global	vApplicationGetIdleTaskMemory
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	vApplicationGetIdleTaskMemory:
 143              	.LVL14:
 144              	.LFB750:
  90:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 145              		.loc 1 90 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
  91:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 150              		.loc 1 91 3 view .LVU16
  91:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 151              		.loc 1 91 25 is_stmt 0 view .LVU17
 152 0000 034B     		ldr	r3, .L8
 153 0002 0360     		str	r3, [r0]
  92:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 154              		.loc 1 92 3 is_stmt 1 view .LVU18
  92:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 155              		.loc 1 92 27 is_stmt 0 view .LVU19
 156 0004 034B     		ldr	r3, .L8+4
 157 0006 0B60     		str	r3, [r1]
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s 			page 7


  93:Core/Src/freertos.c ****   /* place for user code */
 158              		.loc 1 93 3 is_stmt 1 view .LVU20
  93:Core/Src/freertos.c ****   /* place for user code */
 159              		.loc 1 93 25 is_stmt 0 view .LVU21
 160 0008 8023     		movs	r3, #128
 161 000a 1360     		str	r3, [r2]
  95:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 162              		.loc 1 95 1 view .LVU22
 163 000c 7047     		bx	lr
 164              	.L9:
 165 000e 00BF     		.align	2
 166              	.L8:
 167 0010 00000000 		.word	xIdleTaskTCBBuffer
 168 0014 00000000 		.word	xIdleStack
 169              		.cfi_endproc
 170              	.LFE750:
 172              		.section	.text.vApplicationGetTimerTaskMemory,"ax",%progbits
 173              		.align	1
 174              		.global	vApplicationGetTimerTaskMemory
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 179              	vApplicationGetTimerTaskMemory:
 180              	.LVL15:
 181              	.LFB751:
 103:Core/Src/freertos.c ****   *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 182              		.loc 1 103 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 104:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 187              		.loc 1 104 3 view .LVU24
 104:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 188              		.loc 1 104 26 is_stmt 0 view .LVU25
 189 0000 034B     		ldr	r3, .L11
 190 0002 0360     		str	r3, [r0]
 105:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 191              		.loc 1 105 3 is_stmt 1 view .LVU26
 105:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 192              		.loc 1 105 28 is_stmt 0 view .LVU27
 193 0004 034B     		ldr	r3, .L11+4
 194 0006 0B60     		str	r3, [r1]
 106:Core/Src/freertos.c ****   /* place for user code */
 195              		.loc 1 106 3 is_stmt 1 view .LVU28
 106:Core/Src/freertos.c ****   /* place for user code */
 196              		.loc 1 106 26 is_stmt 0 view .LVU29
 197 0008 4FF48073 		mov	r3, #256
 198 000c 1360     		str	r3, [r2]
 108:Core/Src/freertos.c **** /* USER CODE END GET_TIMER_TASK_MEMORY */
 199              		.loc 1 108 1 view .LVU30
 200 000e 7047     		bx	lr
 201              	.L12:
 202              		.align	2
 203              	.L11:
 204 0010 00000000 		.word	xTimerTaskTCBBuffer
 205 0014 00000000 		.word	xTimerStack
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s 			page 8


 206              		.cfi_endproc
 207              	.LFE751:
 209              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 210              		.align	1
 211              		.global	MX_FREERTOS_Init
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 216              	MX_FREERTOS_Init:
 217              	.LFB752:
 116:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 218              		.loc 1 116 29 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 32
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222 0000 10B5     		push	{r4, lr}
 223              	.LCFI2:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 4, -8
 226              		.cfi_offset 14, -4
 227 0002 88B0     		sub	sp, sp, #32
 228              	.LCFI3:
 229              		.cfi_def_cfa_offset 40
 139:Core/Src/freertos.c ****   USBTaskHandle = osThreadCreate(osThread(USBTask), NULL);
 230              		.loc 1 139 3 view .LVU32
 231 0004 0DF1040C 		add	ip, sp, #4
 232 0008 084C     		ldr	r4, .L15
 233 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 234 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 235 0010 94E80700 		ldm	r4, {r0, r1, r2}
 236 0014 8CE80700 		stm	ip, {r0, r1, r2}
 140:Core/Src/freertos.c **** 
 237              		.loc 1 140 3 view .LVU33
 140:Core/Src/freertos.c **** 
 238              		.loc 1 140 19 is_stmt 0 view .LVU34
 239 0018 0021     		movs	r1, #0
 240 001a 01A8     		add	r0, sp, #4
 241 001c FFF7FEFF 		bl	osThreadCreate
 242              	.LVL16:
 140:Core/Src/freertos.c **** 
 243              		.loc 1 140 17 discriminator 1 view .LVU35
 244 0020 034B     		ldr	r3, .L15+4
 245 0022 1860     		str	r0, [r3]
 143:Core/Src/freertos.c **** 
 246              		.loc 1 143 3 is_stmt 1 view .LVU36
 247 0024 FFF7FEFF 		bl	SensorTask_Init
 248              	.LVL17:
 148:Core/Src/freertos.c **** 
 249              		.loc 1 148 1 is_stmt 0 view .LVU37
 250 0028 08B0     		add	sp, sp, #32
 251              	.LCFI4:
 252              		.cfi_def_cfa_offset 8
 253              		@ sp needed
 254 002a 10BD     		pop	{r4, pc}
 255              	.L16:
 256              		.align	2
 257              	.L15:
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s 			page 9


 258 002c 00000000 		.word	.LANCHOR0
 259 0030 00000000 		.word	USBTaskHandle
 260              		.cfi_endproc
 261              	.LFE752:
 263              		.section	.rodata.str1.4,"aMS",%progbits,1
 264              		.align	2
 265              	.LC0:
 266 0000 55534254 		.ascii	"USBTask\000"
 266      61736B00 
 267              		.section	.bss.xTimerStack,"aw",%nobits
 268              		.align	2
 271              	xTimerStack:
 272 0000 00000000 		.space	1024
 272      00000000 
 272      00000000 
 272      00000000 
 272      00000000 
 273              		.section	.bss.xTimerTaskTCBBuffer,"aw",%nobits
 274              		.align	3
 277              	xTimerTaskTCBBuffer:
 278 0000 00000000 		.space	384
 278      00000000 
 278      00000000 
 278      00000000 
 278      00000000 
 279              		.section	.bss.xIdleStack,"aw",%nobits
 280              		.align	2
 283              	xIdleStack:
 284 0000 00000000 		.space	512
 284      00000000 
 284      00000000 
 284      00000000 
 284      00000000 
 285              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 286              		.align	3
 289              	xIdleTaskTCBBuffer:
 290 0000 00000000 		.space	384
 290      00000000 
 290      00000000 
 290      00000000 
 290      00000000 
 291              		.global	USBTaskHandle
 292              		.section	.bss.USBTaskHandle,"aw",%nobits
 293              		.align	2
 296              	USBTaskHandle:
 297 0000 00000000 		.space	4
 298              		.section	.rodata
 299              		.align	2
 300              		.set	.LANCHOR0,. + 0
 301              	.LC3:
 302 0000 00000000 		.word	.LC0
 303 0004 00000000 		.word	USBTask_Run
 304 0008 0200     		.short	2
 305 000a 0000     		.space	2
 306 000c 00000000 		.word	0
 307 0010 00020000 		.word	512
 308 0014 00000000 		.word	0
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s 			page 10


 309 0018 00000000 		.word	0
 310              		.text
 311              	.Letext0:
 312              		.file 2 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.2.1/includ
 313              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 314              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 315              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 316              		.file 6 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 317              		.file 7 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 318              		.file 8 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 319              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 320              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 321              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h"
 322              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 323              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 324              		.file 14 "App/Config/sensor_types.h"
 325              		.file 15 "USB_DEVICE/App/usbd_cdc_if.h"
 326              		.file 16 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 327              		.file 17 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 328              		.file 18 "App/Tasks/SensorTask.h"
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:21     .rodata.USBTask_Run.str1.4:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:27     .text.USBTask_Run:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:33     .text.USBTask_Run:00000000 USBTask_Run
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:111    .text.USBTask_Run:0000006c $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:116    .text.vApplicationStackOverflowHook:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:122    .text.vApplicationStackOverflowHook:00000000 vApplicationStackOverflowHook
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:136    .text.vApplicationGetIdleTaskMemory:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:142    .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:167    .text.vApplicationGetIdleTaskMemory:00000010 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:289    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:283    .bss.xIdleStack:00000000 xIdleStack
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:173    .text.vApplicationGetTimerTaskMemory:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:179    .text.vApplicationGetTimerTaskMemory:00000000 vApplicationGetTimerTaskMemory
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:204    .text.vApplicationGetTimerTaskMemory:00000010 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:277    .bss.xTimerTaskTCBBuffer:00000000 xTimerTaskTCBBuffer
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:271    .bss.xTimerStack:00000000 xTimerStack
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:210    .text.MX_FREERTOS_Init:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:216    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:258    .text.MX_FREERTOS_Init:0000002c $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:296    .bss.USBTaskHandle:00000000 USBTaskHandle
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:264    .rodata.str1.4:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:268    .bss.xTimerStack:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:274    .bss.xTimerTaskTCBBuffer:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:280    .bss.xIdleStack:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:286    .bss.xIdleTaskTCBBuffer:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:293    .bss.USBTaskHandle:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccNwjZAf.s:299    .rodata:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
MX_USB_DEVICE_Init
SensorTask_GetIMU
snprintf
strlen
CDC_Transmit_FS
osDelay
osThreadCreate
SensorTask_Init
