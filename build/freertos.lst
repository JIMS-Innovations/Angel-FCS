ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/freertos.c"
  20              		.section	.rodata.USBTask_Run.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC2:
  23 0000 5B494D55 		.ascii	"[IMU] Gyro(deg/s) >> X:%.2f, Y:%.2f, Z:%.2f | Acc(m"
  23      5D204779 
  23      726F2864 
  23      65672F73 
  23      29203E3E 
  24 0033 2F733229 		.ascii	"/s2) >> X:%.2f, Y:%.2f, Z:%.2f | Baro >> %.2fm, %.2"
  24      203E3E20 
  24      583A252E 
  24      32662C20 
  24      593A252E 
  25 0066 6650612C 		.ascii	"fPa, %.2f\015\012\000"
  25      20252E32 
  25      660D0A00 
  26              		.global	__aeabi_f2d
  27              		.section	.text.USBTask_Run,"ax",%progbits
  28              		.align	1
  29              		.global	USBTask_Run
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	USBTask_Run:
  35              	.LVL0:
  36              	.LFB753:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s 			page 2


  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include "SensorTask.h"
  29:Core/Src/freertos.c **** #include "strings.h"
  30:Core/Src/freertos.c **** #include <stdio.h>
  31:Core/Src/freertos.c **** #include <stdlib.h>
  32:Core/Src/freertos.c **** #include "usbd_cdc_if.h"
  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END Includes */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PTD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PD */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END PM */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  53:Core/Src/freertos.c **** 
  54:Core/Src/freertos.c **** /* USER CODE END Variables */
  55:Core/Src/freertos.c **** osThreadId USBTaskHandle;
  56:Core/Src/freertos.c **** 
  57:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  59:Core/Src/freertos.c **** 
  60:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  61:Core/Src/freertos.c **** 
  62:Core/Src/freertos.c **** void USBTask_Run(void const * argument);
  63:Core/Src/freertos.c **** 
  64:Core/Src/freertos.c **** extern void MX_USB_DEVICE_Init(void);
  65:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  66:Core/Src/freertos.c **** 
  67:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  68:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  69:Core/Src/freertos.c **** 
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s 			page 3


  70:Core/Src/freertos.c **** /* GetTimerTaskMemory prototype (linked to static allocation support) */
  71:Core/Src/freertos.c **** void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTa
  72:Core/Src/freertos.c **** 
  73:Core/Src/freertos.c **** /* Hook prototypes */
  74:Core/Src/freertos.c **** void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName);
  75:Core/Src/freertos.c **** 
  76:Core/Src/freertos.c **** /* USER CODE BEGIN 4 */
  77:Core/Src/freertos.c **** __weak void vApplicationStackOverflowHook(xTaskHandle xTask, signed char *pcTaskName)
  78:Core/Src/freertos.c **** {
  79:Core/Src/freertos.c ****    /* Run time stack overflow checking is performed if
  80:Core/Src/freertos.c ****    configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is
  81:Core/Src/freertos.c ****    called if a stack overflow is detected. */
  82:Core/Src/freertos.c **** }
  83:Core/Src/freertos.c **** /* USER CODE END 4 */
  84:Core/Src/freertos.c **** 
  85:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  86:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  87:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  90:Core/Src/freertos.c **** {
  91:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  92:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  93:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  94:Core/Src/freertos.c ****   /* place for user code */
  95:Core/Src/freertos.c **** }
  96:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  97:Core/Src/freertos.c **** 
  98:Core/Src/freertos.c **** /* USER CODE BEGIN GET_TIMER_TASK_MEMORY */
  99:Core/Src/freertos.c **** static StaticTask_t xTimerTaskTCBBuffer;
 100:Core/Src/freertos.c **** static StackType_t xTimerStack[configTIMER_TASK_STACK_DEPTH];
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c **** void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTa
 103:Core/Src/freertos.c **** {
 104:Core/Src/freertos.c ****   *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 105:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 106:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 107:Core/Src/freertos.c ****   /* place for user code */
 108:Core/Src/freertos.c **** }
 109:Core/Src/freertos.c **** /* USER CODE END GET_TIMER_TASK_MEMORY */
 110:Core/Src/freertos.c **** 
 111:Core/Src/freertos.c **** /**
 112:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 113:Core/Src/freertos.c ****   * @param  None
 114:Core/Src/freertos.c ****   * @retval None
 115:Core/Src/freertos.c ****   */
 116:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 117:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 118:Core/Src/freertos.c **** 
 119:Core/Src/freertos.c ****   /* USER CODE END Init */
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 122:Core/Src/freertos.c ****   /* add mutexes, ... */
 123:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 124:Core/Src/freertos.c **** 
 125:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 126:Core/Src/freertos.c ****   /* add semaphores, ... */
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s 			page 4


 127:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 128:Core/Src/freertos.c **** 
 129:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 130:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 131:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 132:Core/Src/freertos.c **** 
 133:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 134:Core/Src/freertos.c ****   /* add queues, ... */
 135:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 136:Core/Src/freertos.c **** 
 137:Core/Src/freertos.c ****   /* Create the thread(s) */
 138:Core/Src/freertos.c ****   /* definition and creation of USBTask */
 139:Core/Src/freertos.c ****   osThreadDef(USBTask, USBTask_Run, osPriorityHigh, 0, 512);
 140:Core/Src/freertos.c ****   USBTaskHandle = osThreadCreate(osThread(USBTask), NULL);
 141:Core/Src/freertos.c **** 
 142:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 143:Core/Src/freertos.c ****   SensorTask_Init();
 144:Core/Src/freertos.c **** 
 145:Core/Src/freertos.c ****   /* add threads, ... */
 146:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 147:Core/Src/freertos.c **** 
 148:Core/Src/freertos.c **** }
 149:Core/Src/freertos.c **** 
 150:Core/Src/freertos.c **** /* USER CODE BEGIN Header_USBTask_Run */
 151:Core/Src/freertos.c **** /**
 152:Core/Src/freertos.c ****   * @brief  Function implementing the USBTask thread.
 153:Core/Src/freertos.c ****   * @param  argument: Not used
 154:Core/Src/freertos.c ****   * @retval None
 155:Core/Src/freertos.c ****   */
 156:Core/Src/freertos.c **** /* USER CODE END Header_USBTask_Run */
 157:Core/Src/freertos.c **** void USBTask_Run(void const * argument)
 158:Core/Src/freertos.c **** {
  37              		.loc 1 158 1 view -0
  38              		.cfi_startproc
  39              		@ Volatile: function does not return.
  40              		@ args = 0, pretend = 0, frame = 200
  41              		@ frame_needed = 0, uses_anonymous_args = 0
  42              		.loc 1 158 1 is_stmt 0 view .LVU1
  43 0000 00B5     		push	{lr}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 4
  46              		.cfi_offset 14, -4
  47 0002 C5B0     		sub	sp, sp, #276
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 280
 159:Core/Src/freertos.c ****   /* init code for USB_DEVICE */
 160:Core/Src/freertos.c ****   MX_USB_DEVICE_Init();
  50              		.loc 1 160 3 is_stmt 1 view .LVU2
  51 0004 FFF7FEFF 		bl	MX_USB_DEVICE_Init
  52              	.LVL1:
  53              	.L2:
 161:Core/Src/freertos.c ****   /* USER CODE BEGIN USBTask_Run */
 162:Core/Src/freertos.c ****   IMU_Data_t imu;
  54              		.loc 1 162 3 view .LVU3
 163:Core/Src/freertos.c ****   Barometer_Data_t baro;
  55              		.loc 1 163 3 view .LVU4
 164:Core/Src/freertos.c **** 
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s 			page 5


 165:Core/Src/freertos.c ****   /* Infinite loop */
 166:Core/Src/freertos.c ****   for(;;)
  56              		.loc 1 166 3 view .LVU5
  57              	.LBB2:
 167:Core/Src/freertos.c ****   {
 168:Core/Src/freertos.c ****     SensorTask_GetIMU(&imu);
  58              		.loc 1 168 5 view .LVU6
  59 0008 38A8     		add	r0, sp, #224
  60 000a FFF7FEFF 		bl	SensorTask_GetIMU
  61              	.LVL2:
 169:Core/Src/freertos.c ****     SensorTask_GetBaro(&baro);
  62              		.loc 1 169 5 view .LVU7
  63 000e 33A8     		add	r0, sp, #204
  64 0010 FFF7FEFF 		bl	SensorTask_GetBaro
  65              	.LVL3:
 170:Core/Src/freertos.c ****     
 171:Core/Src/freertos.c ****     char buffer[128];
  66              		.loc 1 171 5 view .LVU8
 172:Core/Src/freertos.c ****     snprintf(buffer, 128, "[IMU] Gyro(deg/s) >> X:%.2f, Y:%.2f, Z:%.2f | Acc(m/s2) >> X:%.2f, Y:%.2
  67              		.loc 1 172 5 view .LVU9
  68 0014 3598     		ldr	r0, [sp, #212]	@ float
  69 0016 FFF7FEFF 		bl	__aeabi_f2d
  70              	.LVL4:
  71 001a CDE91001 		strd	r0, [sp, #64]
  72 001e 3398     		ldr	r0, [sp, #204]	@ float
  73 0020 FFF7FEFF 		bl	__aeabi_f2d
  74              	.LVL5:
  75 0024 CDE90E01 		strd	r0, [sp, #56]
  76 0028 3498     		ldr	r0, [sp, #208]	@ float
  77 002a FFF7FEFF 		bl	__aeabi_f2d
  78              	.LVL6:
  79 002e CDE90C01 		strd	r0, [sp, #48]
  80 0032 3A98     		ldr	r0, [sp, #232]	@ float
  81 0034 FFF7FEFF 		bl	__aeabi_f2d
  82              	.LVL7:
  83 0038 CDE90A01 		strd	r0, [sp, #40]
  84 003c 3998     		ldr	r0, [sp, #228]	@ float
  85 003e FFF7FEFF 		bl	__aeabi_f2d
  86              	.LVL8:
  87 0042 CDE90801 		strd	r0, [sp, #32]
  88 0046 3898     		ldr	r0, [sp, #224]	@ float
  89 0048 FFF7FEFF 		bl	__aeabi_f2d
  90              	.LVL9:
  91 004c CDE90601 		strd	r0, [sp, #24]
  92 0050 3D98     		ldr	r0, [sp, #244]	@ float
  93 0052 FFF7FEFF 		bl	__aeabi_f2d
  94              	.LVL10:
  95 0056 CDE90401 		strd	r0, [sp, #16]
  96 005a 3C98     		ldr	r0, [sp, #240]	@ float
  97 005c FFF7FEFF 		bl	__aeabi_f2d
  98              	.LVL11:
  99 0060 CDE90201 		strd	r0, [sp, #8]
 100 0064 3B98     		ldr	r0, [sp, #236]	@ float
 101 0066 FFF7FEFF 		bl	__aeabi_f2d
 102              	.LVL12:
 103 006a CDE90001 		strd	r0, [sp]
 104 006e 084A     		ldr	r2, .L4
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s 			page 6


 105 0070 8021     		movs	r1, #128
 106 0072 13A8     		add	r0, sp, #76
 107 0074 FFF7FEFF 		bl	snprintf
 108              	.LVL13:
 173:Core/Src/freertos.c ****       imu.gyro[2], imu.accel[0], imu.accel[1], imu.accel[2], baro.altitude, baro.pressure, baro.tem
 174:Core/Src/freertos.c ****     CDC_Transmit_FS(buffer, strlen(buffer));
 109              		.loc 1 174 5 view .LVU10
 110              		.loc 1 174 29 is_stmt 0 view .LVU11
 111 0078 13A8     		add	r0, sp, #76
 112 007a FFF7FEFF 		bl	strlen
 113              	.LVL14:
 114              		.loc 1 174 5 discriminator 1 view .LVU12
 115 007e 81B2     		uxth	r1, r0
 116 0080 13A8     		add	r0, sp, #76
 117 0082 FFF7FEFF 		bl	CDC_Transmit_FS
 118              	.LVL15:
 175:Core/Src/freertos.c **** 
 176:Core/Src/freertos.c ****     osDelay(50);
 119              		.loc 1 176 5 is_stmt 1 view .LVU13
 120 0086 3220     		movs	r0, #50
 121 0088 FFF7FEFF 		bl	osDelay
 122              	.LVL16:
 123              	.LBE2:
 166:Core/Src/freertos.c ****   {
 124              		.loc 1 166 3 view .LVU14
 125 008c BCE7     		b	.L2
 126              	.L5:
 127 008e 00BF     		.align	2
 128              	.L4:
 129 0090 00000000 		.word	.LC2
 130              		.cfi_endproc
 131              	.LFE753:
 133              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 134              		.align	1
 135              		.weak	vApplicationStackOverflowHook
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	vApplicationStackOverflowHook:
 141              	.LVL17:
 142              	.LFB749:
  78:Core/Src/freertos.c ****    /* Run time stack overflow checking is performed if
 143              		.loc 1 78 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
  82:Core/Src/freertos.c **** /* USER CODE END 4 */
 148              		.loc 1 82 1 view .LVU16
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE749:
 153              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 154              		.align	1
 155              		.global	vApplicationGetIdleTaskMemory
 156              		.syntax unified
 157              		.thumb
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s 			page 7


 158              		.thumb_func
 160              	vApplicationGetIdleTaskMemory:
 161              	.LVL18:
 162              	.LFB750:
  90:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 163              		.loc 1 90 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
  91:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 168              		.loc 1 91 3 view .LVU18
  91:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 169              		.loc 1 91 25 is_stmt 0 view .LVU19
 170 0000 034B     		ldr	r3, .L8
 171 0002 0360     		str	r3, [r0]
  92:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 172              		.loc 1 92 3 is_stmt 1 view .LVU20
  92:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 173              		.loc 1 92 27 is_stmt 0 view .LVU21
 174 0004 034B     		ldr	r3, .L8+4
 175 0006 0B60     		str	r3, [r1]
  93:Core/Src/freertos.c ****   /* place for user code */
 176              		.loc 1 93 3 is_stmt 1 view .LVU22
  93:Core/Src/freertos.c ****   /* place for user code */
 177              		.loc 1 93 25 is_stmt 0 view .LVU23
 178 0008 8023     		movs	r3, #128
 179 000a 1360     		str	r3, [r2]
  95:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 180              		.loc 1 95 1 view .LVU24
 181 000c 7047     		bx	lr
 182              	.L9:
 183 000e 00BF     		.align	2
 184              	.L8:
 185 0010 00000000 		.word	xIdleTaskTCBBuffer
 186 0014 00000000 		.word	xIdleStack
 187              		.cfi_endproc
 188              	.LFE750:
 190              		.section	.text.vApplicationGetTimerTaskMemory,"ax",%progbits
 191              		.align	1
 192              		.global	vApplicationGetTimerTaskMemory
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	vApplicationGetTimerTaskMemory:
 198              	.LVL19:
 199              	.LFB751:
 103:Core/Src/freertos.c ****   *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;
 200              		.loc 1 103 1 is_stmt 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 104:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 205              		.loc 1 104 3 view .LVU26
 104:Core/Src/freertos.c ****   *ppxTimerTaskStackBuffer = &xTimerStack[0];
 206              		.loc 1 104 26 is_stmt 0 view .LVU27
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s 			page 8


 207 0000 034B     		ldr	r3, .L11
 208 0002 0360     		str	r3, [r0]
 105:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 209              		.loc 1 105 3 is_stmt 1 view .LVU28
 105:Core/Src/freertos.c ****   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 210              		.loc 1 105 28 is_stmt 0 view .LVU29
 211 0004 034B     		ldr	r3, .L11+4
 212 0006 0B60     		str	r3, [r1]
 106:Core/Src/freertos.c ****   /* place for user code */
 213              		.loc 1 106 3 is_stmt 1 view .LVU30
 106:Core/Src/freertos.c ****   /* place for user code */
 214              		.loc 1 106 26 is_stmt 0 view .LVU31
 215 0008 4FF48073 		mov	r3, #256
 216 000c 1360     		str	r3, [r2]
 108:Core/Src/freertos.c **** /* USER CODE END GET_TIMER_TASK_MEMORY */
 217              		.loc 1 108 1 view .LVU32
 218 000e 7047     		bx	lr
 219              	.L12:
 220              		.align	2
 221              	.L11:
 222 0010 00000000 		.word	xTimerTaskTCBBuffer
 223 0014 00000000 		.word	xTimerStack
 224              		.cfi_endproc
 225              	.LFE751:
 227              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 228              		.align	1
 229              		.global	MX_FREERTOS_Init
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 234              	MX_FREERTOS_Init:
 235              	.LFB752:
 116:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 236              		.loc 1 116 29 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 32
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 10B5     		push	{r4, lr}
 241              	.LCFI2:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 4, -8
 244              		.cfi_offset 14, -4
 245 0002 88B0     		sub	sp, sp, #32
 246              	.LCFI3:
 247              		.cfi_def_cfa_offset 40
 139:Core/Src/freertos.c ****   USBTaskHandle = osThreadCreate(osThread(USBTask), NULL);
 248              		.loc 1 139 3 view .LVU34
 249 0004 0DF1040C 		add	ip, sp, #4
 250 0008 084C     		ldr	r4, .L15
 251 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 252 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 253 0010 94E80700 		ldm	r4, {r0, r1, r2}
 254 0014 8CE80700 		stm	ip, {r0, r1, r2}
 140:Core/Src/freertos.c **** 
 255              		.loc 1 140 3 view .LVU35
 140:Core/Src/freertos.c **** 
 256              		.loc 1 140 19 is_stmt 0 view .LVU36
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s 			page 9


 257 0018 0021     		movs	r1, #0
 258 001a 01A8     		add	r0, sp, #4
 259 001c FFF7FEFF 		bl	osThreadCreate
 260              	.LVL20:
 140:Core/Src/freertos.c **** 
 261              		.loc 1 140 17 discriminator 1 view .LVU37
 262 0020 034B     		ldr	r3, .L15+4
 263 0022 1860     		str	r0, [r3]
 143:Core/Src/freertos.c **** 
 264              		.loc 1 143 3 is_stmt 1 view .LVU38
 265 0024 FFF7FEFF 		bl	SensorTask_Init
 266              	.LVL21:
 148:Core/Src/freertos.c **** 
 267              		.loc 1 148 1 is_stmt 0 view .LVU39
 268 0028 08B0     		add	sp, sp, #32
 269              	.LCFI4:
 270              		.cfi_def_cfa_offset 8
 271              		@ sp needed
 272 002a 10BD     		pop	{r4, pc}
 273              	.L16:
 274              		.align	2
 275              	.L15:
 276 002c 00000000 		.word	.LANCHOR0
 277 0030 00000000 		.word	USBTaskHandle
 278              		.cfi_endproc
 279              	.LFE752:
 281              		.section	.rodata.str1.4,"aMS",%progbits,1
 282              		.align	2
 283              	.LC0:
 284 0000 55534254 		.ascii	"USBTask\000"
 284      61736B00 
 285              		.section	.bss.xTimerStack,"aw",%nobits
 286              		.align	2
 289              	xTimerStack:
 290 0000 00000000 		.space	1024
 290      00000000 
 290      00000000 
 290      00000000 
 290      00000000 
 291              		.section	.bss.xTimerTaskTCBBuffer,"aw",%nobits
 292              		.align	3
 295              	xTimerTaskTCBBuffer:
 296 0000 00000000 		.space	384
 296      00000000 
 296      00000000 
 296      00000000 
 296      00000000 
 297              		.section	.bss.xIdleStack,"aw",%nobits
 298              		.align	2
 301              	xIdleStack:
 302 0000 00000000 		.space	512
 302      00000000 
 302      00000000 
 302      00000000 
 302      00000000 
 303              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 304              		.align	3
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s 			page 10


 307              	xIdleTaskTCBBuffer:
 308 0000 00000000 		.space	384
 308      00000000 
 308      00000000 
 308      00000000 
 308      00000000 
 309              		.global	USBTaskHandle
 310              		.section	.bss.USBTaskHandle,"aw",%nobits
 311              		.align	2
 314              	USBTaskHandle:
 315 0000 00000000 		.space	4
 316              		.section	.rodata
 317              		.align	2
 318              		.set	.LANCHOR0,. + 0
 319              	.LC3:
 320 0000 00000000 		.word	.LC0
 321 0004 00000000 		.word	USBTask_Run
 322 0008 0200     		.short	2
 323 000a 0000     		.space	2
 324 000c 00000000 		.word	0
 325 0010 00020000 		.word	512
 326 0014 00000000 		.word	0
 327 0018 00000000 		.word	0
 328              		.text
 329              	.Letext0:
 330              		.file 2 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.2.1/includ
 331              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 332              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 333              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 334              		.file 6 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 335              		.file 7 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 336              		.file 8 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 337              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 338              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 339              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h"
 340              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 341              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 342              		.file 14 "App/Config/sensor_types.h"
 343              		.file 15 "USB_DEVICE/App/usbd_cdc_if.h"
 344              		.file 16 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 345              		.file 17 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 346              		.file 18 "App/Tasks/SensorTask.h"
ARM GAS  /var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:21     .rodata.USBTask_Run.str1.4:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:28     .text.USBTask_Run:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:34     .text.USBTask_Run:00000000 USBTask_Run
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:129    .text.USBTask_Run:00000090 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:134    .text.vApplicationStackOverflowHook:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:140    .text.vApplicationStackOverflowHook:00000000 vApplicationStackOverflowHook
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:154    .text.vApplicationGetIdleTaskMemory:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:160    .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:185    .text.vApplicationGetIdleTaskMemory:00000010 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:307    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:301    .bss.xIdleStack:00000000 xIdleStack
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:191    .text.vApplicationGetTimerTaskMemory:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:197    .text.vApplicationGetTimerTaskMemory:00000000 vApplicationGetTimerTaskMemory
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:222    .text.vApplicationGetTimerTaskMemory:00000010 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:295    .bss.xTimerTaskTCBBuffer:00000000 xTimerTaskTCBBuffer
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:289    .bss.xTimerStack:00000000 xTimerStack
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:228    .text.MX_FREERTOS_Init:00000000 $t
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:234    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:276    .text.MX_FREERTOS_Init:0000002c $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:314    .bss.USBTaskHandle:00000000 USBTaskHandle
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:282    .rodata.str1.4:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:286    .bss.xTimerStack:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:292    .bss.xTimerTaskTCBBuffer:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:298    .bss.xIdleStack:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:304    .bss.xIdleTaskTCBBuffer:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:311    .bss.USBTaskHandle:00000000 $d
/var/folders/5r/fplts1414czdxljy659l60kh0000gn/T//ccQ2ZARI.s:317    .rodata:00000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
MX_USB_DEVICE_Init
SensorTask_GetIMU
SensorTask_GetBaro
snprintf
strlen
CDC_Transmit_FS
osDelay
osThreadCreate
SensorTask_Init
